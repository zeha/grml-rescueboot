name: release
on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Extract version from tag
        id: version
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          VERSION="${TAG_NAME#v}"
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"
          echo "tag=${TAG_NAME}" >> "$GITHUB_OUTPUT"

      - name: Extract changelog entry
        id: changelog
        run: |
          VERSION="${{ steps.version.outputs.version }}"

          # Extract changelog for this specific version
          CHANGES=$(dpkg-parsechangelog -l debian/changelog --since "${VERSION}" --until "${VERSION}" --show-field Changes)

          # Set as output for use in release
          {
            echo 'description<<EOF'
            echo "$CHANGES"
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"

      - name: Get package build run ID
        id: build-run
        uses: actions/github-script@v7
        with:
          script: |
            const runs = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'package-build.yml',
              head_sha: context.sha,
              status: 'completed',
              conclusion: 'success'
            });

            if (runs.data.workflow_runs.length === 0) {
              throw new Error('No successful package-build run found for this commit');
            }

            const runId = runs.data.workflow_runs[0].id;
            console.log(`Found package-build run: ${runId}`);
            return runId;

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: deb
          path: artifacts/
          run-id: ${{ steps.build-run.outputs.result }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        run: |
          DEB_FILE=$(find artifacts -name "*.deb" -printf "%f\n" | head -1)
          gh release create "${{ steps.version.outputs.tag }}" \
            --title "Release ${{ steps.version.outputs.tag }}" \
            --notes "## Changes in ${{ steps.version.outputs.version }}

          ${{ steps.changelog.outputs.description }}

          ---

          ðŸ“¦ **Installation:**
          Download the package and install with:
          \`\`\`bash
          sudo apt install ./${DEB_FILE}
          \`\`\`" \
            artifacts/*
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
